const { exec } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ CONFIGURA√á√ÉO AUTOM√ÅTICA SUPABASE - RELIET\n');

// URLs do projeto Supabase
const supabaseUrl = 'https://supabase.com/dashboard/project/ljfxpzcdrctqmfydofdh/sql';
const tableEditorUrl = 'https://supabase.com/dashboard/project/ljfxpzcdrctqmfydofdh/editor';

console.log('üìã CONFIGURA√á√ÉO COMPLETA PARA VENDAS DIRETAS VIA STRIPE');
console.log('=====================================================\n');

console.log('üéØ O QUE SER√Å CONFIGURADO:');
console.log('‚úÖ Tabelas automatizadas para produtos e vendas');
console.log('‚úÖ Integra√ß√£o com Stripe para checkout');
console.log('‚úÖ Sistema de estoque autom√°tico');
console.log('‚úÖ Gest√£o manual de pedidos');
console.log('‚úÖ Dashboard completo para administra√ß√£o\n');

console.log('üîß PASSO A PASSO:\n');

console.log('1Ô∏è‚É£ CONFIGURA√á√ÉO PRINCIPAL:');
console.log('   - Abrir SQL Editor do Supabase');
console.log('   - Executar: supabase-automation-setup.sql');
console.log('   - Aguardar execu√ß√£o completa\n');

console.log('2Ô∏è‚É£ INSERIR PRODUTOS:');
console.log('   - Executar: insert-sample-products.sql');
console.log('   - Verificar produtos inseridos\n');

console.log('3Ô∏è‚É£ CONFIGURAR STRIPE:');
console.log('   - Abrir Table Editor ‚Üí site_settings');
console.log('   - Configurar chaves do Stripe');
console.log('   - Definir emails de admin\n');

console.log('4Ô∏è‚É£ TESTAR SISTEMA:');
console.log('   - Verificar produtos no dashboard');
console.log('   - Testar cria√ß√£o de pedidos');
console.log('   - Verificar controle de estoque\n');

// Verificar se os arquivos SQL existem
const setupFile = path.join(__dirname, '../supabase/supabase-automation-setup.sql');
const productsFile = path.join(__dirname, '../supabase/insert-sample-products.sql');

if (!fs.existsSync(setupFile)) {
  console.log('‚ùå ERRO: Arquivo supabase-automation-setup.sql n√£o encontrado!');
  console.log('   Verifique se o arquivo existe em: supabase/supabase-automation-setup.sql');
  process.exit(1);
}

if (!fs.existsSync(productsFile)) {
  console.log('‚ùå ERRO: Arquivo insert-sample-products.sql n√£o encontrado!');
  console.log('   Verifique se o arquivo existe em: supabase/insert-sample-products.sql');
  process.exit(1);
}

console.log('‚úÖ ARQUIVOS SQL ENCONTRADOS:');
console.log('   - supabase-automation-setup.sql');
console.log('   - insert-sample-products.sql\n');

console.log('üîó LINKS √öTEIS:');
console.log('   SQL Editor: ' + supabaseUrl);
console.log('   Table Editor: ' + tableEditorUrl);
console.log('   Guia Completo: SUPABASE-SETUP-GUIDE.md\n');

// Fun√ß√£o para abrir navegador
function openBrowser(url, description) {
  const platform = process.platform;
  let command;

  if (platform === 'darwin') {
    command = `open "${url}"`;
  } else if (platform === 'win32') {
    command = `start "${url}"`;
  } else {
    command = `xdg-open "${url}"`;
  }

  exec(command, (error) => {
    if (error) {
      console.log(`‚ùå Erro ao abrir ${description}:`, error.message);
      console.log(`üîó Acesse manualmente: ${url}`);
    } else {
      console.log(`‚úÖ ${description} aberto com sucesso!`);
    }
  });
}

// Fun√ß√£o para mostrar conte√∫do do arquivo
function showFileContent(filePath, description) {
  try {
    const content = fs.readFileSync(filePath, 'utf8');
    console.log(`\nüìÑ CONTE√öDO DE ${description}:`);
    console.log('=====================================================');
    console.log(content.substring(0, 500) + '...');
    console.log('=====================================================');
    console.log(`üìÅ Arquivo completo: ${filePath}\n`);
  } catch (error) {
    console.log(`‚ùå Erro ao ler ${description}:`, error.message);
  }
}

// Menu interativo
console.log('üéÆ MENU DE CONFIGURA√á√ÉO:');
console.log('1. Abrir SQL Editor (Configura√ß√£o Principal)');
console.log('2. Abrir Table Editor (Configurar Stripe)');
console.log('3. Mostrar Setup SQL');
console.log('4. Mostrar Produtos SQL');
console.log('5. Abrir Guia Completo');
console.log('6. Sair\n');

// Simular input do usu√°rio (em produ√ß√£o, usar readline)
console.log('üí° DICA: Para configurar o Supabase:');
console.log('   1. Escolha op√ß√£o 1 para abrir SQL Editor');
console.log('   2. Cole o conte√∫do de supabase-automation-setup.sql');
console.log('   3. Clique em RUN e aguarde');
console.log('   4. Repita com insert-sample-products.sql');
console.log('   5. Configure as chaves do Stripe\n');

// Abrir SQL Editor automaticamente
console.log('üöÄ ABRINDO SQL EDITOR AUTOMATICAMENTE...\n');
openBrowser(supabaseUrl, 'SQL Editor do Supabase');

// Mostrar conte√∫do dos arquivos
setTimeout(() => {
  showFileContent(setupFile, 'supabase-automation-setup.sql');
}, 2000);

setTimeout(() => {
  showFileContent(productsFile, 'insert-sample-products.sql');
}, 4000);

console.log('\nüìã PR√ìXIMOS PASSOS:');
console.log('1. Execute os scripts SQL no Supabase');
console.log('2. Configure as chaves do Stripe');
console.log('3. Teste o sistema de produtos');
console.log('4. Configure webhook do Stripe');
console.log('5. Teste checkout completo\n');

console.log('üéâ CONFIGURA√á√ÉO AUTOM√ÅTICA INICIADA!');
console.log('   Siga o guia SUPABASE-SETUP-GUIDE.md para detalhes completos.\n');
