const { exec } = require('child_process');

console.log('üß™ TESTANDO SINCRONIZA√á√ÉO SUPABASE - RELIET\n');

console.log('üìã TESTES A SEREM EXECUTADOS:');
console.log('1. API Supabase - Lista de produtos');
console.log('2. API Supabase - Produto individual');
console.log('3. Compara√ß√£o com API antiga');
console.log('4. Verifica√ß√£o de nomes e pre√ßos\n');

// URLs de teste
const baseUrl = 'http://localhost:3000';
const testUrls = [
  '/api/supabase/products?featured=true',
  '/api/supabase/products',
  '/api/supabase/products/1',
  '/api/products?featured=true',
  '/api/products',
  '/api/products/1'
];

async function testEndpoint(url, description) {
  return new Promise((resolve) => {
    const fullUrl = `${baseUrl}${url}`;
    console.log(`üîç Testando: ${description}`);
    console.log(`   URL: ${fullUrl}`);
    
    exec(`curl -s "${fullUrl}" | head -20`, (error, stdout, stderr) => {
      if (error) {
        console.log(`   ‚ùå Erro: ${error.message}`);
        resolve({ success: false, error: error.message });
        return;
      }
      
      if (stderr) {
        console.log(`   ‚ö†Ô∏è  Aviso: ${stderr}`);
      }
      
      console.log(`   ‚úÖ Resposta (primeiras 20 linhas):`);
      console.log(`   ${stdout.trim().split('\n').map(line => `   ${line}`).join('\n')}`);
      console.log('');
      
      resolve({ success: true, data: stdout });
    });
  });
}

async function runTests() {
  console.log('üöÄ INICIANDO TESTES...\n');
  
  const results = [];
  
  // Teste 1: API Supabase - Produtos em destaque
  results.push(await testEndpoint(
    '/api/supabase/products?featured=true',
    'API Supabase - Produtos em destaque'
  ));
  
  // Teste 2: API Supabase - Lista completa
  results.push(await testEndpoint(
    '/api/supabase/products',
    'API Supabase - Lista completa'
  ));
  
  // Teste 3: API Supabase - Produto individual
  results.push(await testEndpoint(
    '/api/supabase/products/1',
    'API Supabase - Produto individual (ID 1)'
  ));
  
  // Teste 4: API Antiga - Produtos em destaque
  results.push(await testEndpoint(
    '/api/products?featured=true',
    'API Antiga - Produtos em destaque'
  ));
  
  // Teste 5: API Antiga - Lista completa
  results.push(await testEndpoint(
    '/api/products',
    'API Antiga - Lista completa'
  ));
  
  // Teste 6: API Antiga - Produto individual
  results.push(await testEndpoint(
    '/api/products/1',
    'API Antiga - Produto individual (ID 1)'
  ));
  
  // Resumo dos resultados
  console.log('üìä RESUMO DOS TESTES:');
  console.log('=====================');
  
  const successCount = results.filter(r => r.success).length;
  const totalCount = results.length;
  
  console.log(`‚úÖ Sucessos: ${successCount}/${totalCount}`);
  console.log(`‚ùå Falhas: ${totalCount - successCount}/${totalCount}`);
  
  if (successCount === totalCount) {
    console.log('\nüéâ TODOS OS TESTES PASSARAM!');
    console.log('   A sincroniza√ß√£o com Supabase est√° funcionando perfeitamente.');
  } else {
    console.log('\n‚ö†Ô∏è  ALGUNS TESTES FALHARAM!');
    console.log('   Verifique os logs acima para identificar problemas.');
  }
  
  console.log('\nüîß PR√ìXIMOS PASSOS:');
  console.log('1. Verifique se o Supabase est√° configurado');
  console.log('2. Execute os scripts SQL no Supabase');
  console.log('3. Configure as vari√°veis de ambiente');
  console.log('4. Teste as p√°ginas do site');
  
  console.log('\nüåê TESTE AS P√ÅGINAS:');
  console.log(`   Home: ${baseUrl}`);
  console.log(`   Cat√°logo: ${baseUrl}/catalogo`);
  console.log(`   Produto: ${baseUrl}/produto/1`);
}

// Verificar se o servidor est√° rodando
console.log('üîç Verificando se o servidor est√° rodando...\n');

exec(`curl -s -o /dev/null -w "%{http_code}" "${baseUrl}"`, (error, stdout, stderr) => {
  if (error || stdout !== '200') {
    console.log('‚ùå Servidor n√£o est√° rodando!');
    console.log('   Execute: npm run dev');
    console.log('   Aguarde o servidor iniciar e execute novamente este script.\n');
    return;
  }
  
  console.log('‚úÖ Servidor est√° rodando! Iniciando testes...\n');
  runTests();
});
